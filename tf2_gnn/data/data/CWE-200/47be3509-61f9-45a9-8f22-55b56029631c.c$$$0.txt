-----label-----
0
-----code-----
static void good2()
{
    if(staticTrue)
    {
        /* FIX: error message is general */
        printLine("Not in path");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
11,12
11,13
12,13
-----nextToken-----
2,4,8,13,14
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void good2(){    if(staticTrue)    {        /* FIX: error message is general */        printLine("Not in path");    }}
static void
good2()
good2
{    if(staticTrue)    {        /* FIX: error message is general */        printLine("Not in path");    }}
if(staticTrue)    {        /* FIX: error message is general */        printLine("Not in path");    }
staticTrue
staticTrue
{        /* FIX: error message is general */        printLine("Not in path");    }
printLine("Not in path");
printLine("Not in path")
printLine
printLine
"Not in path"
-----joern-----
(3,5,0)
(6,1,0)
(0,3,0)
(0,2,1)
(4,2,1)
(4,3,1)
(3,0,1)
(3,2,2)
(0,2,2)
-----------------------------------
(0,"Not in path")
(1,)
(2,staticTrue)
(3,printLine("Not in path")
(4,RET)
(5,)
(6,if(staticTrue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
