-----label-----
0
-----code-----
static void good2()
{
    if(globalTrue)
    {
        /* FIX: error message is general */
        printLine("Not in path");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
11,12
11,13
12,13
-----nextToken-----
2,4,8,13,14
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void good2(){    if(globalTrue)    {        /* FIX: error message is general */        printLine("Not in path");    }}
static void
good2()
good2
{    if(globalTrue)    {        /* FIX: error message is general */        printLine("Not in path");    }}
if(globalTrue)    {        /* FIX: error message is general */        printLine("Not in path");    }
globalTrue
globalTrue
{        /* FIX: error message is general */        printLine("Not in path");    }
printLine("Not in path");
printLine("Not in path")
printLine
printLine
"Not in path"
-----joern-----
(2,0,0)
(1,3,0)
(5,1,0)
(1,5,1)
(6,1,1)
(5,4,1)
(6,4,1)
(1,4,2)
(5,4,2)
-----------------------------------
(0,)
(1,printLine("Not in path")
(2,if(globalTrue)
(3,)
(4,globalTrue)
(5,"Not in path")
(6,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
