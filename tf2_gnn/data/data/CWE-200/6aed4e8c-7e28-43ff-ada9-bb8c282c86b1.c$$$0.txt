-----label-----
0
-----code-----
static void good1()
{
    if(globalFalse)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: error message is general */
        printLine("Not in path");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
7,8
9,10
10,11
11,12
11,13
12,13
15,16
16,17
17,18
17,19
18,19
-----nextToken-----
2,4,8,13,14,19,20
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void good1(){    if(globalFalse)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: error message is general */        printLine("Not in path");    }}
static void
good1()
good1
{    if(globalFalse)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: error message is general */        printLine("Not in path");    }}
if(globalFalse)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: error message is general */        printLine("Not in path");    }
globalFalse
globalFalse
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: error message is general */        printLine("Not in path");    }
printLine("Not in path");
printLine("Not in path")
printLine
printLine
"Not in path"
-----joern-----
(0,7,0)
(1,5,0)
(2,3,0)
(7,9,0)
(5,4,0)
(6,5,1)
(6,7,1)
(1,8,1)
(7,0,1)
(5,1,1)
(0,8,1)
(1,8,2)
(5,8,2)
(0,8,2)
(7,8,2)
-----------------------------------
(0,"Not in path")
(1,"Benign, fixed string")
(2,if(globalFalse)
(3,)
(4,)
(5,printLine("Benign, fixed string")
(6,RET)
(7,printLine("Not in path")
(8,globalFalse)
(9,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
