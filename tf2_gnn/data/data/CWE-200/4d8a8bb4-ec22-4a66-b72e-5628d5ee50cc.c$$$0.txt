-----label-----
0
-----code-----
static void good1()
{
    if(GLOBAL_CONST_FALSE)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: error message is general */
        printLine("Not in path");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
7,8
9,10
10,11
11,12
11,13
12,13
15,16
16,17
17,18
17,19
18,19
-----nextToken-----
2,4,8,13,14,19,20
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void good1(){    if(GLOBAL_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: error message is general */        printLine("Not in path");    }}
static void
good1()
good1
{    if(GLOBAL_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: error message is general */        printLine("Not in path");    }}
if(GLOBAL_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: error message is general */        printLine("Not in path");    }
GLOBAL_CONST_FALSE
GLOBAL_CONST_FALSE
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: error message is general */        printLine("Not in path");    }
printLine("Not in path");
printLine("Not in path")
printLine
printLine
"Not in path"
-----joern-----
(4,1,0)
(3,2,0)
(7,6,0)
(2,8,0)
(0,4,0)
(5,2,1)
(5,4,1)
(2,3,1)
(0,9,1)
(3,9,1)
(4,0,1)
(2,9,2)
(4,9,2)
(0,9,2)
(3,9,2)
-----------------------------------
(0,"Not in path")
(1,)
(2,printLine("Benign, fixed string")
(3,"Benign, fixed string")
(4,printLine("Not in path")
(5,RET)
(6,)
(7,if(GLOBAL_CONST_FALSE)
(8,)
(9,GLOBAL_CONST_FALSE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
